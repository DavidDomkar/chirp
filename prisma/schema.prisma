// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id            String         @id @default(auto()) @map("_id") @db.ObjectId
  username      String         @unique
  password      String         @map("hashedPassword")
  name          String
  posts         Post[]
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @default(now()) @updatedAt
  likedPosts    LikedPost[]
  dislikedPosts DislikedPost[]

  @@map("users")
}

model Post {
  id         String         @id @default(auto()) @map("_id") @db.ObjectId
  content    String
  author     User?          @relation(fields: [authorId], references: [id])
  authorId   String         @db.ObjectId
  createdAt  DateTime       @default(now())
  updatedAt  DateTime       @default(now()) @updatedAt
  likedBy    LikedPost[]
  dislikedBy DislikedPost[]

  @@map("posts")
}

model LikedPost {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  post      Post?    @relation(fields: [postId], references: [id])
  postId    String   @db.ObjectId
  user      User?    @relation(fields: [userId], references: [id])
  userId    String   @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  @@map("likedPosts")
}

model DislikedPost {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  post      Post?    @relation(fields: [postId], references: [id])
  postId    String   @db.ObjectId
  user      User?    @relation(fields: [userId], references: [id])
  userId    String   @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  @@map("dislikedPosts")
}
